<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smis.dao.CourseMapper">
	<resultMap id="BaseResultMap" type="com.smis.model.Course">
		<id column="cid" property="cid" jdbcType="VARCHAR" />
		<result column="cname" property="cname" jdbcType="VARCHAR" />
		<result column="credit" property="credit" jdbcType="DOUBLE" />
		<result column="credit_hours" property="creditHours" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		cid, cname, credit, credit_hours
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from course
		where cid = #{cid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from course
		where cid = #{cid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.smis.model.Course">
		insert into course (cid, cname, credit,
		credit_hours)
		values
		(#{cid,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{credit,jdbcType=DOUBLE},
		#{creditHours,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.smis.model.Course">
		insert into course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				cid,
			</if>
			<if test="cname != null">
				cname,
			</if>
			<if test="credit != null">
				credit,
			</if>
			<if test="creditHours != null">
				credit_hours,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				#{cid,jdbcType=VARCHAR},
			</if>
			<if test="cname != null">
				#{cname,jdbcType=VARCHAR},
			</if>
			<if test="credit != null">
				#{credit,jdbcType=DOUBLE},
			</if>
			<if test="creditHours != null">
				#{creditHours,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.smis.model.Course">
		update course
		<set>
			<if test="cname != null">
				cname = #{cname,jdbcType=VARCHAR},
			</if>
			<if test="credit != null">
				credit = #{credit,jdbcType=DOUBLE},
			</if>
			<if test="creditHours != null">
				credit_hours = #{creditHours,jdbcType=INTEGER},
			</if>
		</set>
		where cid = #{cid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.smis.model.Course">
		update course
		set cname = #{cname,jdbcType=VARCHAR},
		credit =
		#{credit,jdbcType=DOUBLE},
		credit_hours = #{creditHours,jdbcType=INTEGER}
		where cid = #{cid,jdbcType=VARCHAR}
	</update>

	<!-- 自定义的sql片段 -->
	<sql id="where_equal_like">
		<where>
			<if test="cid != null">
				AND course.cid LIKE CONCAT('%', #{cid,jdbcType=VARCHAR}, '%')
			</if>
			<if test="cname != null">
				AND course.cname LIKE CONCAT('%', #{cname,jdbcType=VARCHAR}, '%')
			</if>
			<if test="credit != null">
				AND course.credit LIKE = #{credit,jdbcType=DOUBLE}
			</if>
			<if test="credit_hours != null">
				AND course.credit_hours = #{credit_hours,jdbcType=INTEGER}
			</if>
		</where>
	</sql>

	<sql id="select_where_equal_like_and_order_limit">
		SELECT
		<include refid="Base_Column_List" />
		FROM course
		<include refid="where_equal_like" />
		<if test="orderColumn != null and order != null">
			ORDER BY #{orderColumn} #{order}
		</if>
		<if test="currRecordIndex != null and pageSize != null">
			LIMIT #{currRecordIndex},#{pageSize}
		</if>
	</sql>

	<!-- 分页的课程信息 -->
	<select id="selectPageCourses" resultMap="BaseResultMap" parameterType="java.util.Map">
		<include refid="select_where_equal_like_and_order_limit" />
	</select>

	<select id="getCourseTotalCount" resultType="java.lang.Long" parameterType="java.util.Map">
		SELECT
		count(1)
		FROM
		course
		<include refid="where_equal_like" />
	</select>

	<!-- 所有的课程信息 -->
	<select id="selectAllCourses" resultMap="BaseResultMap">
		<include refid="select_where_equal_like_and_order_limit" />
	</select>

	<!-- teacher -->
	<select id="selectAllCoursesByTid" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		course.cid,
		course.cname
		FROM
		course
		INNER JOIN teach_course ON teach_course.cid = course.cid
		WHERE
		teach_course.tid = #{tid,jdbcType=VARCHAR}
	</select>
</mapper>