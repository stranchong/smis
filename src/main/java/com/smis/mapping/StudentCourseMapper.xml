<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smis.dao.StudentCourseMapper">
	<resultMap id="BaseResultMap" type="com.smis.model.StudentCourse">
		<id column="sid" property="sid" jdbcType="VARCHAR" />
		<id column="cid" property="cid" jdbcType="VARCHAR" />
		<result column="score" property="score" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		sid, cid, score
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.smis.model.StudentCourseKey">
		select
		<include refid="Base_Column_List" />
		from student_course
		where sid = #{sid,jdbcType=VARCHAR}
		and cid = #{cid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.smis.model.StudentCourseKey">
		delete from student_course
		where sid = #{sid,jdbcType=VARCHAR}
		and
		cid = #{cid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.smis.model.StudentCourse">
		insert into student_course (sid, cid, score
		)
		values (#{sid,jdbcType=VARCHAR},
		#{cid,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.smis.model.StudentCourse">
		insert into student_course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sid != null">
				sid,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="score != null">
				score,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sid != null">
				#{sid,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=VARCHAR},
			</if>
			<if test="score != null">
				#{score,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.smis.model.StudentCourse">
		update student_course
		<set>
			<if test="score != null">
				score = #{score,jdbcType=INTEGER},
			</if>
		</set>
		where sid = #{sid,jdbcType=VARCHAR}
		and cid = #{cid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.smis.model.StudentCourse">
		update student_course
		set score = #{score,jdbcType=INTEGER}
		where
		sid = #{sid,jdbcType=VARCHAR}
		and cid = #{cid,jdbcType=VARCHAR}
	</update>

	<!-- StudentCourse、Course -->
	<resultMap id="studentScoreResultMap" type="com.smis.model.StudentCourse">
		<result column="score" property="score" jdbcType="INTEGER" />
		<result property="cname" column="cname" />
		<result property="credit" column="credit" />
		<result property="creditHours" column="credit_hours" />
	</resultMap>

	<!-- 学生查询分页的StudentCourse、Course信息 -->
	<select id="selectPageStudentScoresBySid" resultMap="studentScoreResultMap" parameterType="java.util.Map">
		SELECT
		course.cname,
		student_course.score,
		course.credit,
		course.credit_hours
		FROM
		student_course
		INNER JOIN course ON
		student_course.cid =
		course.cid
		WHERE student_course.sid =
		#{sid,jdbcType=VARCHAR}
		AND student_course.score IS NOT NULL
		LIMIT
		#{currRecordIndex},#{pageSize}
	</select>

	<!-- 学生查询总的StudentCourse记录条数 -->
	<select id="selectStudentScoreTotalCountBySid" resultType="java.lang.Long" parameterType="java.lang.String">
		SELECT
		count(1)
		FROM
		student_course
		where student_course.sid =
		#{sid,jdbcType=VARCHAR}
		AND student_course.score IS NOT NULL
	</select>

	<!-- 教师查询分页的StudentCourse、Course信息 -->
	<select id="selectPageStudentScoresByTid" resultMap="studentScoreResultMap" parameterType="java.util.Map">
		SELECT
		course.cname,
		class.clname,
		student.sname,
		student_course.score,
		student_course.cid,
		student_course.sid
		FROM
		course
		INNER JOIN teach_course ON teach_course.cid = course.cid
		INNER JOIN student_course ON student_course.cid = course.cid
		INNER JOIN student ON student_course.sid = student.sid
		INNER JOIN class ON student.clid = class.clid
		where teach_course.tid =
		#{tid,jdbcType=VARCHAR}
		AND student_course.score IS NOT NULL
		LIMIT
		#{currRecordIndex},#{pageSize}
	</select>

	<!-- 教师查询总的StudentCourse记录条数 -->
	<select id="selectStudentScoreTotalCountByTid" resultType="java.lang.Long" parameterType="java.lang.String">
		SELECT
		count(1)
		FROM
		teach_course
		INNER JOIN student_course ON teach_course.cid = student_course.cid
		WHERE
		teach_course.tid =
		#{tid,jdbcType=VARCHAR}
		AND student_course.score IS NOT NULL
	</select>

</mapper>